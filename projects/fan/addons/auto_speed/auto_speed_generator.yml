# used to work around !lambda substitution limitations 

defaults:
  icon: mdi:speedometer-medium
  
  requires:
    ident: 3
    min:
    max:
    step: 1
  first: false
  last: false
  lambda_fudge:
    number:
      actions:
        - lambda: !lambda id(${fan}_auto_thresh_${ident}).publish_state( id(${temp_sensor}).state >= x ); 
        - if:
            condition:
              lambda: !lambda return x <= id(${fan}_auto_${ident-1}).state;
            then:
              number.set:
                id: "${fan}_auto_${ident-1}"
                "value": !lambda return x - ${step};
        - if:
            condition:
              lambda: !lambda return x >= id(${fan}_auto_${ident+1}).state;
            then:
              number.set:
                id: "${fan}_auto_${ident+1}"
                "value": !lambda return x + ${step};

binary_sensor:
  - id: ${fan}_auto_thresh_${ident}
    platform: analog_threshold
    sensor_id: ${temp_sensor}
    threshold: !lambda return id(${fan}_auto_${ident}).state;

number:
  - platform: template
    restore_value: true
    entity_category: config
    min_value: ${min}
    max_value: ${max}
    step: ${step}
    device_class: TEMPERATURE
    unit_of_measurement: Â°C
    optimistic: true
    mode: box
    id: ${fan}_auto_${ident}
    name: Auto Speed ${ident} Temperature
    initial_value: ${default}
#    icon: ${icon}
    set_action: 
      then: |-
        <% if first %>
          <% set r = [lambda_fudge.number.actions[0], lambda_fudge.number.actions[ -1]] %>
        <% elif last %>
          <% set r = lambda_fudge.number.actions[:2]%>
        <%else%>
          <% set r = lambda_fudge.number.actions%>
        <% endif %>
        ${r}

